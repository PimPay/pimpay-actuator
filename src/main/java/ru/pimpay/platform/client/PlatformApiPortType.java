package ru.pimpay.platform.client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * Все метод PimPay API для служб доставок
 *
 * This class was generated by Apache CXF 3.1.11
 * 2017-04-23T18:39:21.696+03:00
 * Generated source version: 3.1.11
 * 
 */
@WebService(targetNamespace = "urn:PlatformApiWsdl", name = "PlatformApiPortType")
@XmlSeeAlso({ObjectFactory.class})
@SOAPBinding(style = SOAPBinding.Style.RPC)
public interface PlatformApiPortType {

    /**
     * Получить информацию о платежах от Почты России по клиенту
     *             
     */
    @WebMethod(action = "urn:PlatformApiWsdl#getRussianPostPayments")
    @WebResult(name = "result", targetNamespace = "urn:PlatformApiWsdl", partName = "result")
    public RussianPostPaymentsResponse getRussianPostPayments(
        @WebParam(partName = "token", name = "token")
        java.lang.String token,
        @WebParam(partName = "tin", name = "tin")
        java.lang.String tin,
        @WebParam(partName = "postIds", name = "postIds")
        PostIds postIds
    );

    /**
     * Обновить часто меняющуюся информацию по заказам (статус/стоимость)
     *             
     */
    @WebMethod(action = "urn:PlatformApiWsdl#updateStateForOrders")
    @WebResult(name = "result", targetNamespace = "urn:PlatformApiWsdl", partName = "result")
    public UpdateStateResultResponse updateStateForOrders(
        @WebParam(partName = "token", name = "token")
        java.lang.String token,
        @WebParam(partName = "ordersStates", name = "ordersStates")
        OrdersStates ordersStates
    );

    /**
     * Метод для проверки подписи, посылаемое в SOAP-заголовке
     *             
     */
    @WebMethod(action = "urn:PlatformApiWsdl#testHeaderSignature")
    @WebResult(name = "isVerified", targetNamespace = "urn:PlatformApiWsdl", partName = "isVerified")
    public boolean testHeaderSignature(
        @WebParam(partName = "token", name = "token")
        java.lang.String token
    );

    /**
     * Метод для обращению к сервису через base64-контейнер, для упрощенной работы с подписью
     *             
     */
    @WebMethod(action = "urn:PlatformApiWsdl#invokeUsingContainer")
    @WebResult(name = "responseContainer", targetNamespace = "urn:PlatformApiWsdl", partName = "responseContainer")
    public java.lang.String invokeUsingContainer(
        @WebParam(partName = "token", name = "token")
        java.lang.String token,
        @WebParam(partName = "requestContainer", name = "requestContainer")
        java.lang.String requestContainer,
        @WebParam(partName = "requestSignature", name = "requestSignature")
        java.lang.String requestSignature
    );

    /**
     * Добавить/обновить информацию по историческим заказам
     *             
     */
    @WebMethod(action = "urn:PlatformApiWsdl#upsertHistoricalOrders")
    @WebResult(name = "result", targetNamespace = "urn:PlatformApiWsdl", partName = "result")
    public UpsertResultResponse upsertHistoricalOrders(
        @WebParam(partName = "token", name = "token")
        java.lang.String token,
        @WebParam(partName = "orders", name = "orders")
        Orders orders
    );

    /**
     * Получить статус клиента
     */
    @WebMethod(action = "urn:PlatformApiWsdl#getClient")
    @WebResult(name = "clientInfo", targetNamespace = "urn:PlatformApiWsdl", partName = "clientInfo")
    public ClientInfo getClient(
        @WebParam(partName = "token", name = "token")
        java.lang.String token,
        @WebParam(partName = "tin", name = "tin")
        java.lang.String tin
    );

    /**
     * Метод для проверки подписи, посылаем через контейнер
     *             
     */
    @WebMethod(action = "urn:PlatformApiWsdl#testContainerSignature")
    @WebResult(name = "isVerified", targetNamespace = "urn:PlatformApiWsdl", partName = "isVerified")
    public boolean testContainerSignature(
        @WebParam(partName = "token", name = "token")
        java.lang.String token,
        @WebParam(partName = "container", name = "container")
        java.lang.String container,
        @WebParam(partName = "signature", name = "signature")
        java.lang.String signature
    );

    /**
     * Добавить/обновить информацию по заказам
     */
    @WebMethod(action = "urn:PlatformApiWsdl#upsertOrders")
    @WebResult(name = "result", targetNamespace = "urn:PlatformApiWsdl", partName = "result")
    public UpsertResultResponse upsertOrders(
        @WebParam(partName = "token", name = "token")
        java.lang.String token,
        @WebParam(partName = "orders", name = "orders")
        Orders orders
    );

    /**
     * Отправить сверку
     */
    @WebMethod(action = "urn:PlatformApiWsdl#sendVerification")
    @WebResult(name = "result", targetNamespace = "urn:PlatformApiWsdl", partName = "result")
    public boolean sendVerification(
        @WebParam(partName = "token", name = "token")
        java.lang.String token,
        @WebParam(partName = "tin", name = "tin")
        java.lang.String tin,
        @WebParam(partName = "id", name = "id")
        java.lang.String id,
        @WebParam(partName = "paymentOrder", name = "paymentOrder")
        PaymentOrder paymentOrder,
        @WebParam(partName = "rows", name = "rows")
        VerificationRows rows
    );

    /**
     * Получить информацию об ответах по претензиям от Почты России по номерам ШПИ
     *             
     */
    @WebMethod(action = "urn:PlatformApiWsdl#getRussianPostClaimAnswers")
    @WebResult(name = "result", targetNamespace = "urn:PlatformApiWsdl", partName = "result")
    public RussianPostClaimAnswersResponse getRussianPostClaimAnswers(
        @WebParam(partName = "token", name = "token")
        java.lang.String token,
        @WebParam(partName = "tin", name = "tin")
        java.lang.String tin,
        @WebParam(partName = "postIds", name = "postIds")
        PostIds postIds
    );

    /**
     * Получить статус переданной сверки
     */
    @WebMethod(action = "urn:PlatformApiWsdl#getVerificationStatus")
    @WebResult(name = "result", targetNamespace = "urn:PlatformApiWsdl", partName = "result")
    public VerificationStatusResponse getVerificationStatus(
        @WebParam(partName = "token", name = "token")
        java.lang.String token,
        @WebParam(partName = "id", name = "id")
        java.lang.String id
    );

    /**
     * Отправить информацию о клиенте в PimPay
     */
    @WebMethod(action = "urn:PlatformApiWsdl#acceptClient")
    @WebResult(name = "clientInfo", targetNamespace = "urn:PlatformApiWsdl", partName = "clientInfo")
    public ClientInfo acceptClient(
        @WebParam(partName = "token", name = "token")
        java.lang.String token,
        @WebParam(partName = "client", name = "client")
        AcceptClientParams client
    );
}
